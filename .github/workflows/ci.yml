name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    TESTCOVERAGE_THRESHOLD: 90

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Test
              run: |
                  go test -race -covermode atomic -coverprofile coverage.out ./...
                  go tool cover -func coverage.out

            # - name: Quality Gate - Test coverage shall be above threshold
            #   run: |
            #       echo "Quality Gate: checking test coverage is above threshold ..."
            #       echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
            #       totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            #       echo "Current test coverage : $totalCoverage %"
            #       if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            #           echo "OK"
            #       else
            #           echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            #           echo "Failed"
            #           exit 1
            #       fi

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3

    lint:
        name: Lint
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

            - name: Vet
              run: |
                  go vet ./...

    build:
        name: build
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Ensure project compiles
              run: make build
