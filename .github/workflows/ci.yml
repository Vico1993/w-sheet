name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Test (without race detector)
              run: make test
              if: runner.os == 'Windows'

    lint:
        name: Lint
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

    build:
        name: build
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.18

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Ensure project compiles
              run: make build

    coverage:
        runs-on: ubuntu-latest
        env:
            GO111MODULE: "on"

        steps:
            - name: Install Go
              uses: actions/setup-go@v2
              with:
                  go-version: ^1

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Coverage
              env:
                  COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  go test -race -covermode atomic -coverprofile=profile.cov ./...
                  GO111MODULE=off go get github.com/mattn/goveralls
                  $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github
